server {
    server_name api.gitdiagram.com;

    # 阻止没有有效Host头的请求
    if ($host !~ ^(api.gitdiagram.com)$) {
        return 444;
    }

    # 严格只允许对指定路径的GET、POST和OPTIONS请求（在我的fastapi应用中定义）
    location ~ ^/(generate(/cost|/stream)?|modify|)?$ {
        if ($request_method !~ ^(GET|POST|OPTIONS)$) {
            return 444;
        }

        proxy_pass http://127.0.0.1:8000;
        include proxy_params;
        proxy_redirect off;

        # 为SSE禁用缓冲
        proxy_buffering off;
        proxy_cache off;
        
        # SSE所需的头信息
        proxy_set_header Connection '';
        proxy_http_version 1.1;
    }

    # 对其他所有内容返回444（无响应，只关闭连接）
    location / {
        return 444;
        # 保持访问日志开启
    }

    # 添加超时设置
    proxy_connect_timeout 300;
    proxy_send_timeout 300;
    proxy_read_timeout 300;
    send_timeout 300;

    listen 443 ssl; # 由Certbot管理
    ssl_certificate /etc/letsencrypt/live/api.gitdiagram.com/fullchain.pem; # 由Certbot管理
    ssl_certificate_key /etc/letsencrypt/live/api.gitdiagram.com/privkey.pem; # 由Certbot管理
    include /etc/letsencrypt/options-ssl-nginx.conf; # 由Certbot管理
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # 由Certbot管理

}
server {
    if ($host = api.gitdiagram.com) {
        return 301 https://$host$request_uri;
    } # 由Certbot管理


    listen 80;
    server_name api.gitdiagram.com;
    return 404; # 由Certbot管理
}